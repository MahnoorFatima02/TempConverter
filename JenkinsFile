pipeline {
    agent any

    environment {
        MAVEN_HOME = '/opt/homebrew/Cellar/maven/3.9.9/libexec'
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
        DOCKERHUB_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKERHUB_REPO = 'mahnoor/tempconverter'
        DOCKER_IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                git branch: 'main', url: 'git@github.com:MahnoorFatima02/TempConverter.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build Docker image
                script {
                    docker.build("${DOCKERHUB_REPO}:${DOCKER_IMAGE_TAG}")
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                // Push Docker image to Docker Hub
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUB_CREDENTIALS_ID) {
                        docker.image("${DOCKERHUB_REPO}:${DOCKER_IMAGE_TAG}").push()
                    }
                }
            }
        }
    }
}


//         stage('Build') {
//             steps {
//                 // Build the project using Maven
//                sh '''
//                                        mvn clean compile
//                                    '''
//             }
//         }

//         stage('Test') {
//             steps {
//
//           sh '''
//                                       mvn test
//                                   '''
//             }
//         }
//      stage('Verify') {
//             steps {
//                 // Verify the project using Maven
//                 sh 'mvn verify'
//             }
//         }
//
//         stage('Code Coverage') {
//             steps {
//                 // Generate JaCoCo code coverage report
//                 sh 'mvn jacoco:report'
//             }
//             post {
//                 always {
//                     // Archive the JaCoCo code coverage report
//                     jacoco execPattern: '**/target/jacoco.exec'
//                 }
//             }
//         }
//     }
//
//     post {
//         always {
//             // Archive the build artifacts
//             archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
//             // Publish JUnit test results
//             junit '**/target/surefire-reports/*.xml'
//         }
//     }
// }